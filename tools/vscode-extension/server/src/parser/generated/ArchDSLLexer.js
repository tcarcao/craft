// Generated from ArchDSL.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,29,277,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,
1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,
1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,207,8,23,1,24,1,24,1,24,1,24,1,24,
1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,237,8,24,1,25,1,25,5,25,
241,8,25,10,25,12,25,244,9,25,1,26,4,26,247,8,26,11,26,12,26,248,1,26,1,
26,1,27,1,27,1,27,1,27,5,27,257,8,27,10,27,12,27,260,9,27,1,27,1,27,1,28,
1,28,1,28,1,28,5,28,268,8,28,10,28,12,28,271,9,28,1,28,1,28,1,28,1,28,1,
28,1,269,0,29,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
49,25,51,26,53,27,55,28,57,29,1,0,4,2,0,65,90,97,122,4,0,48,57,65,90,95,
95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,289,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,1,59,1,0,0,0,3,
66,1,0,0,0,5,68,1,0,0,0,7,70,1,0,0,0,9,78,1,0,0,0,11,86,1,0,0,0,13,96,1,
0,0,0,15,106,1,0,0,0,17,114,1,0,0,0,19,120,1,0,0,0,21,129,1,0,0,0,23,140,
1,0,0,0,25,143,1,0,0,0,27,146,1,0,0,0,29,152,1,0,0,0,31,155,1,0,0,0,33,159,
1,0,0,0,35,163,1,0,0,0,37,174,1,0,0,0,39,176,1,0,0,0,41,178,1,0,0,0,43,180,
1,0,0,0,45,183,1,0,0,0,47,206,1,0,0,0,49,236,1,0,0,0,51,238,1,0,0,0,53,246,
1,0,0,0,55,252,1,0,0,0,57,263,1,0,0,0,59,60,5,115,0,0,60,61,5,121,0,0,61,
62,5,115,0,0,62,63,5,116,0,0,63,64,5,101,0,0,64,65,5,109,0,0,65,2,1,0,0,
0,66,67,5,123,0,0,67,4,1,0,0,0,68,69,5,125,0,0,69,6,1,0,0,0,70,71,5,98,0,
0,71,72,5,111,0,0,72,73,5,117,0,0,73,74,5,110,0,0,74,75,5,100,0,0,75,76,
5,101,0,0,76,77,5,100,0,0,77,8,1,0,0,0,78,79,5,99,0,0,79,80,5,111,0,0,80,
81,5,110,0,0,81,82,5,116,0,0,82,83,5,101,0,0,83,84,5,120,0,0,84,85,5,116,
0,0,85,10,1,0,0,0,86,87,5,97,0,0,87,88,5,103,0,0,88,89,5,103,0,0,89,90,5,
114,0,0,90,91,5,101,0,0,91,92,5,103,0,0,92,93,5,97,0,0,93,94,5,116,0,0,94,
95,5,101,0,0,95,12,1,0,0,0,96,97,5,99,0,0,97,98,5,111,0,0,98,99,5,109,0,
0,99,100,5,112,0,0,100,101,5,111,0,0,101,102,5,110,0,0,102,103,5,101,0,0,
103,104,5,110,0,0,104,105,5,116,0,0,105,14,1,0,0,0,106,107,5,115,0,0,107,
108,5,101,0,0,108,109,5,114,0,0,109,110,5,118,0,0,110,111,5,105,0,0,111,
112,5,99,0,0,112,113,5,101,0,0,113,16,1,0,0,0,114,115,5,101,0,0,115,116,
5,118,0,0,116,117,5,101,0,0,117,118,5,110,0,0,118,119,5,116,0,0,119,18,1,
0,0,0,120,121,5,117,0,0,121,122,5,112,0,0,122,123,5,115,0,0,123,124,5,116,
0,0,124,125,5,114,0,0,125,126,5,101,0,0,126,127,5,97,0,0,127,128,5,109,0,
0,128,20,1,0,0,0,129,130,5,100,0,0,130,131,5,111,0,0,131,132,5,119,0,0,132,
133,5,110,0,0,133,134,5,115,0,0,134,135,5,116,0,0,135,136,5,114,0,0,136,
137,5,101,0,0,137,138,5,97,0,0,138,139,5,109,0,0,139,22,1,0,0,0,140,141,
5,116,0,0,141,142,5,111,0,0,142,24,1,0,0,0,143,144,5,97,0,0,144,145,5,115,
0,0,145,26,1,0,0,0,146,147,5,117,0,0,147,148,5,115,0,0,148,149,5,105,0,0,
149,150,5,110,0,0,150,151,5,103,0,0,151,28,1,0,0,0,152,153,5,111,0,0,153,
154,5,110,0,0,154,30,1,0,0,0,155,156,5,97,0,0,156,157,5,99,0,0,157,158,5,
108,0,0,158,32,1,0,0,0,159,160,5,111,0,0,160,161,5,104,0,0,161,162,5,115,
0,0,162,34,1,0,0,0,163,164,5,99,0,0,164,165,5,111,0,0,165,166,5,110,0,0,
166,167,5,102,0,0,167,168,5,111,0,0,168,169,5,114,0,0,169,170,5,109,0,0,
170,171,5,105,0,0,171,172,5,115,0,0,172,173,5,116,0,0,173,36,1,0,0,0,174,
175,5,46,0,0,175,38,1,0,0,0,176,177,5,40,0,0,177,40,1,0,0,0,178,179,5,41,
0,0,179,42,1,0,0,0,180,181,5,45,0,0,181,182,5,62,0,0,182,44,1,0,0,0,183,
184,5,44,0,0,184,46,1,0,0,0,185,186,5,103,0,0,186,207,5,111,0,0,187,188,
5,106,0,0,188,189,5,97,0,0,189,190,5,118,0,0,190,207,5,97,0,0,191,192,5,
112,0,0,192,193,5,121,0,0,193,194,5,116,0,0,194,195,5,104,0,0,195,196,5,
111,0,0,196,207,5,110,0,0,197,198,5,110,0,0,198,199,5,111,0,0,199,200,5,
100,0,0,200,201,5,101,0,0,201,202,5,106,0,0,202,207,5,115,0,0,203,204,5,
112,0,0,204,205,5,104,0,0,205,207,5,112,0,0,206,185,1,0,0,0,206,187,1,0,
0,0,206,191,1,0,0,0,206,197,1,0,0,0,206,203,1,0,0,0,207,48,1,0,0,0,208,209,
5,101,0,0,209,210,5,107,0,0,210,237,5,115,0,0,211,212,5,108,0,0,212,213,
5,97,0,0,213,214,5,109,0,0,214,215,5,98,0,0,215,216,5,100,0,0,216,237,5,
97,0,0,217,218,5,115,0,0,218,219,5,113,0,0,219,237,5,115,0,0,220,221,5,115,
0,0,221,222,5,110,0,0,222,237,5,115,0,0,223,224,5,100,0,0,224,225,5,121,
0,0,225,226,5,110,0,0,226,227,5,97,0,0,227,228,5,109,0,0,228,229,5,111,0,
0,229,230,5,100,0,0,230,237,5,98,0,0,231,232,5,114,0,0,232,233,5,101,0,0,
233,234,5,100,0,0,234,235,5,105,0,0,235,237,5,115,0,0,236,208,1,0,0,0,236,
211,1,0,0,0,236,217,1,0,0,0,236,220,1,0,0,0,236,223,1,0,0,0,236,231,1,0,
0,0,237,50,1,0,0,0,238,242,7,0,0,0,239,241,7,1,0,0,240,239,1,0,0,0,241,244,
1,0,0,0,242,240,1,0,0,0,242,243,1,0,0,0,243,52,1,0,0,0,244,242,1,0,0,0,245,
247,7,2,0,0,246,245,1,0,0,0,247,248,1,0,0,0,248,246,1,0,0,0,248,249,1,0,
0,0,249,250,1,0,0,0,250,251,6,26,0,0,251,54,1,0,0,0,252,253,5,47,0,0,253,
254,5,47,0,0,254,258,1,0,0,0,255,257,8,3,0,0,256,255,1,0,0,0,257,260,1,0,
0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,261,1,0,0,0,260,258,1,0,0,0,261,
262,6,27,0,0,262,56,1,0,0,0,263,264,5,47,0,0,264,265,5,42,0,0,265,269,1,
0,0,0,266,268,9,0,0,0,267,266,1,0,0,0,268,271,1,0,0,0,269,270,1,0,0,0,269,
267,1,0,0,0,270,272,1,0,0,0,271,269,1,0,0,0,272,273,5,42,0,0,273,274,5,47,
0,0,274,275,1,0,0,0,275,276,6,28,0,0,276,58,1,0,0,0,7,0,206,236,242,248,
258,269,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ArchDSLLexer extends antlr4.Lexer {

    static grammarFileName = "ArchDSL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'system'", "'{'", "'}'", "'bounded'", "'context'", 
                         "'aggregate'", "'component'", "'service'", "'event'", 
                         "'upstream'", "'downstream'", "'to'", "'as'", "'using'", 
                         "'on'", "'acl'", "'ohs'", "'conformist'", "'.'", 
                         "'('", "')'", "'->'", "','" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "TECH", "PLATFORM", "IDENT", "WS", "LINE_COMMENT", 
                          "BLOCK_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "TECH", "PLATFORM", 
                      "IDENT", "WS", "LINE_COMMENT", "BLOCK_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

ArchDSLLexer.EOF = antlr4.Token.EOF;
ArchDSLLexer.T__0 = 1;
ArchDSLLexer.T__1 = 2;
ArchDSLLexer.T__2 = 3;
ArchDSLLexer.T__3 = 4;
ArchDSLLexer.T__4 = 5;
ArchDSLLexer.T__5 = 6;
ArchDSLLexer.T__6 = 7;
ArchDSLLexer.T__7 = 8;
ArchDSLLexer.T__8 = 9;
ArchDSLLexer.T__9 = 10;
ArchDSLLexer.T__10 = 11;
ArchDSLLexer.T__11 = 12;
ArchDSLLexer.T__12 = 13;
ArchDSLLexer.T__13 = 14;
ArchDSLLexer.T__14 = 15;
ArchDSLLexer.T__15 = 16;
ArchDSLLexer.T__16 = 17;
ArchDSLLexer.T__17 = 18;
ArchDSLLexer.T__18 = 19;
ArchDSLLexer.T__19 = 20;
ArchDSLLexer.T__20 = 21;
ArchDSLLexer.T__21 = 22;
ArchDSLLexer.T__22 = 23;
ArchDSLLexer.TECH = 24;
ArchDSLLexer.PLATFORM = 25;
ArchDSLLexer.IDENT = 26;
ArchDSLLexer.WS = 27;
ArchDSLLexer.LINE_COMMENT = 28;
ArchDSLLexer.BLOCK_COMMENT = 29;



